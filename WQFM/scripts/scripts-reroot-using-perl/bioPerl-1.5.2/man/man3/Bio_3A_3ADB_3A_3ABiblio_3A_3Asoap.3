.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Bio::DB::Biblio::soap 3"
.TH Bio::DB::Biblio::soap 3 "2008-07-07" "perl v5.8.8" "User Contributed Perl Documentation"
.SH "NAME"
Bio::DB::Biblio::soap \- A SOAP\-based access to a bibliographic query service
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
Do not use this object directly, it is recommended to access it and use
it through the \fIBio::Biblio\fR module:
.PP
.Vb 2
\&  use Bio::Biblio;
\&  my $biblio = Bio::Biblio->new (-access => 'soap');
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This object contains the real implementation of a Bibliographic Query
Service as defined in Bio::DB::BiblioI \- using a \s-1SOAP\s0 protocol
to access a WebService (a remote server) that represents a
bibliographic repository.
.SH "FEEDBACK"
.IX Header "FEEDBACK"
.Sh "Mailing Lists"
.IX Subsection "Mailing Lists"
User feedback is an integral part of the evolution of this and other
Bioperl modules. Send your comments and suggestions preferably to
the Bioperl mailing list.  Your participation is much appreciated.
.PP
.Vb 2
\&  bioperl-l@bioperl.org                  - General discussion
\&  http://bioperl.org/wiki/Mailing_lists  - About the mailing lists
.Ve
.Sh "Reporting Bugs"
.IX Subsection "Reporting Bugs"
Report bugs to the Bioperl bug tracking system to help us keep track
of the bugs and their resolution. Bug reports can be submitted via the
web:
.PP
.Vb 1
\&  http://bugzilla.open-bio.org/
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Martin Senger (martin.senger@gmail.com)
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2002 European Bioinformatics Institute. All Rights Reserved.
.PP
This module is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
.SH "DISCLAIMER"
.IX Header "DISCLAIMER"
This software is provided \*(L"as is\*(R" without warranty of any kind.
.SH "BUGS AND LIMITATIONS"
.IX Header "BUGS AND LIMITATIONS"
.IP "\(bu" 4
Methods returning a boolean value (\fIhas_next\fR, \fIexists\fR and
\&\fIcontains\fR) can be used only with SOAP::Lite version 0.52 and newer
(probably due to a bug in the older SOAP::Lite).
.IP "\(bu" 4
It does not use \s-1WSDL\s0.
.IP "\(bu" 4
More testing and debugging needed to ensure that returned citations
are properly transferred even if they contain foreign characters.
.SH "APPENDIX"
.IX Header "APPENDIX"
The main documentation details are to be found in
Bio::DB::BiblioI.
.PP
Here is the rest of the object methods.  Internal methods are preceded
with an underscore _.
.Sh "_initialize"
.IX Subsection "_initialize"
.Vb 4
\& Usage   : my $obj = new Bio::Biblio (-access => 'soap' ...);
\&           (_initialize is internally called from this constructor)
\& Returns : nothing interesting
\& Args    : This module recognises and uses following arguments:
.Ve
.PP
.Vb 5
\&             -namespace => 'urn'
\&               The namespace used by the WebService that is being
\&               accessed. It is a string which guarantees its world-wide
\&               uniqueness - therefore it often has a style of a URL -
\&               but it does not mean that such pseudo-URL really exists.
.Ve
.PP
.Vb 1
\&               Default is 'http://industry.ebi.ac.uk/openBQS'.
.Ve
.PP
.Vb 5
\&             -destroy_on_exit => '0'
\&                Default value is '1' which means that all Bio::Biblio
\&                objects - when being finalised - will send a request
\&                to the remote WebService to forget the query collections
\&                they represent.
.Ve
.PP
.Vb 4
\&                If you change it to '0' make sure that you know the
\&                query collection identification - otherwise you will
\&                not be able to re-established connection with it.
\&                This can be done by calling method get_collection_id.
.Ve
.PP
.Vb 5
\&              -collection_id => '...'
\&                It defines what query collection will this object work
\&                with. Use this argument when you know a collection ID
\&                of an existing query collection and when you wish to
\&                re-established connection with it.
.Ve
.PP
.Vb 3
\&                By default, the collection IDs are set automatically
\&                by the query methods - they return Bio::Biblio objects
\&                already having a collection ID.
.Ve
.PP
.Vb 4
\&                A missing or undefined collection ID means that the
\&                object represents the whole bibliographic repository
\&                (which again means that some methods, like get_all,
\&                will be probably refused).
.Ve
.PP
.Vb 4
\&              -soap => a SOAP::Lite object
\&                Usually all Bio::Biblio objects share an instance of
\&                the underlying SOAP::Lite module. But you are free
\&                to have more - perhaps with different characteristics.
.Ve
.PP
.Vb 2
\&                See the code for attributes of the default SOAP::Lite
\&                object.
.Ve
.PP
.Vb 4
\&              -httpproxy => 'http://server:port'
\&                 In addition to the 'location' parameter, you may need
\&                 to specify also a location/URL of a HTTP proxy server
\&                 (if your site requires one).
.Ve
.PP
.Vb 4
\&           Additionally, the main module Bio::Biblio recognises
\&           also:
\&             -access => '...'
\&             -location => '...'
.Ve
.PP
It populates calling object with the given arguments, and then \- for
some attributes and only if they are not yet populated \- it assigns
some default values.
.PP
This is an actual \fInew()\fR method (except for the real object creation
and its blessing which is done in the parent class Bio::Root::Root in
method _create_object).
.PP
Note that this method is called always as an \fIobject\fR method (never as
a \fIclass\fR method) \- and that the object who calls this method may
already be partly initiated (from Bio::Biblio::new method); so if you
need to do some tricks with the 'class invocation' you need to change
Bio::Biblio::new method, not this one.
.Sh "\s-1VERSION\s0 and Revision"
.IX Subsection "VERSION and Revision"
.Vb 2
\& Usage   : print $Bio::DB::Biblio::soap::VERSION;
\&           print $Bio::DB::Biblio::soap::Revision;
.Ve
.Sh "Defaults"
.IX Subsection "Defaults"
.Vb 2
\& Usage   : print $Bio::DB::Biblio::soap::DEFAULT_SERVICE;
\&           print $Bio::DB::Biblio::soap::DEFAULT_NAMESPACE;
.Ve
