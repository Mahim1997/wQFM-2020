.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Bio::Ontology::InterProTerm 3"
.TH Bio::Ontology::InterProTerm 3 "2008-07-07" "perl v5.8.8" "User Contributed Perl Documentation"
.SH "NAME"
Bio::Ontology::InterProTerm \- Implementation of InterProI term interface
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 11
\&  my $term = Bio::Ontology::InterProTerm->new( 
\&        -interpro_id => "IPR000001",
\&                  -name => "Kringle",
\&                  -definition => "Kringles are autonomous structural domains ...",
\&                  -ontology => "Domain"
\&                                             );
\&  print $term->interpro_id(), "\en";
\&  print $term->name(), "\en";
\&  print $term->definition(), "\en";
\&  print $term->is_obsolete(), "\en";
\&  print $term->ontology->name(), "\en";
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This is a simple extension of Bio::Ontology::Term for InterPro terms.
.SH "FEEDBACK"
.IX Header "FEEDBACK"
.Sh "Mailing Lists"
.IX Subsection "Mailing Lists"
User feedback is an integral part of the evolution of this and other
Bioperl modules. Send your comments and suggestions preferably to
the Bioperl mailing list.  Your participation is much appreciated.
.PP
.Vb 2
\&  bioperl-l@bioperl.org                  - General discussion
\&  http://bioperl.org/wiki/Mailing_lists  - About the mailing lists
.Ve
.Sh "Reporting Bugs"
.IX Subsection "Reporting Bugs"
Report bugs to the Bioperl bug tracking system to help us keep track
of the bugs and their resolution. Bug reports can be submitted via
the web:
.PP
.Vb 1
\&  http://bugzilla.open-bio.org/
.Ve
.SH "AUTHOR \- Peter Dimitrov"
.IX Header "AUTHOR - Peter Dimitrov"
Email dimitrov@gnf.org
.SH "APPENDIX"
.IX Header "APPENDIX"
The rest of the documentation details each of the object methods.
Internal methods are usually preceded with a _
.Sh "new"
.IX Subsection "new"
.Vb 6
\& Title   : new
\& Usage   : $term = Bio::Ontology::InterProTerm->new( -interpro_id => "IPR000002",
\&                                                     -name => "Cdc20/Fizzy",
\&                                                     -definition => "The Cdc20/Fizzy region is almost always ...",
\&                                                     -ontology => "Domain"
\&                                                   );
.Ve
.PP
.Vb 9
\& Function: Creates a new Bio::Ontology::InterProTerm.
\& Example :
\& Returns : A new Bio::Ontology::InterProTerm object.
\& Args    :
\&  -interpro_id => the InterPro ID of the term. Has the form IPRdddddd, where dddddd is a zero-padded six digit number
\&  -name => the name of this InterPro term [scalar]
\&  -definition => the definition/abstract of this InterPro term [scalar]
\&  -ontology => ontology of InterPro terms [Bio::Ontology::OntologyI]
\&  -comment => a comment [scalar]
.Ve
.Sh "init"
.IX Subsection "init"
.Vb 6
\& Title   : init
\& Usage   : $term->init();
\& Function: Initializes this InterProTerm to all "" and empty lists.
\& Example :
\& Returns : 
\& Args    :
.Ve
.Sh "_check_interpro_id"
.IX Subsection "_check_interpro_id"
.Vb 6
\& Title   : _check_interpro_id
\& Usage   :
\& Function: Performs simple check in order to validate that its argument has the form IPRdddddd, where dddddd is a zero-padded six digit number.
\& Example :
\& Returns : Returns its argument if valid, otherwise throws exception.
\& Args    : String
.Ve
.Sh "interpro_id"
.IX Subsection "interpro_id"
.Vb 6
\& Title   : interpro_id
\& Usage   : $obj->interpro_id($newval)
\& Function: Set/get for the interpro_id of this InterProTerm
\& Example : 
\& Returns : value of interpro_id (a scalar)
\& Args    : new value (a scalar, optional)
.Ve
.Sh "short_name"
.IX Subsection "short_name"
.Vb 6
\& Title   : short_name
\& Usage   : $obj->short_name($newval)
\& Function: Set/get for the short name of this InterProTerm.
\& Example : 
\& Returns : value of short_name (a scalar)
\& Args    : new value (a scalar, optional)
.Ve
.Sh "protein_count"
.IX Subsection "protein_count"
.Vb 6
\& Title   : protein_count
\& Usage   : $obj->protein_count($newval)
\& Function: Set/get for the protein count of this InterProTerm.
\& Example : 
\& Returns : value of protein_count (a scalar)
\& Args    : new value (a scalar, optional)
.Ve
.Sh "get_references"
.IX Subsection "get_references"
.Vb 6
\& Title   : get_references
\& Usage   :
\& Function: Get the references for this InterPro term.
\& Example :
\& Returns : An array of L<Bio::Annotation::Reference> objects
\& Args    :
.Ve
.Sh "add_reference"
.IX Subsection "add_reference"
.Vb 6
\& Title   : add_reference
\& Usage   :
\& Function: Add one or more references to this InterPro term.
\& Example :
\& Returns : 
\& Args    : One or more L<Bio::Annotation::Reference> objects.
.Ve
.Sh "remove_references"
.IX Subsection "remove_references"
.Vb 7
\& Title   : remove_references
\& Usage   :
\& Function: Remove all references for this InterPro term.
\& Example :
\& Returns : The list of previous references as an array of
\&           L<Bio::Annotation::Reference> objects.
\& Args    :
.Ve
.Sh "get_members"
.IX Subsection "get_members"
.Vb 6
\& Title   : get_members
\& Usage   : @arr = get_members()
\& Function: Get the list of member(s) for this object.
\& Example :
\& Returns : An array of Bio::Annotation::DBLink objects
\& Args    :
.Ve
.Sh "add_member"
.IX Subsection "add_member"
.Vb 6
\& Title   : add_member
\& Usage   :
\& Function: Add one or more member(s) to this object.
\& Example :
\& Returns : 
\& Args    : One or more Bio::Annotation::DBLink objects.
.Ve
.Sh "remove_members"
.IX Subsection "remove_members"
.Vb 7
\& Title   : remove_members
\& Usage   :
\& Function: Remove all members for this class.
\& Example :
\& Returns : The list of previous members as an array of
\&           Bio::Annotation::DBLink objects.
\& Args    :
.Ve
.Sh "get_examples"
.IX Subsection "get_examples"
.Vb 3
\& Title   : get_examples
\& Usage   : @arr = get_examples()
\& Function: Get the list of example(s) for this object.
.Ve
.PP
.Vb 1
\&           This is an element of the InterPro xml schema.
.Ve
.PP
.Vb 3
\& Example :
\& Returns : An array of Bio::Annotation::DBLink objects
\& Args    :
.Ve
.Sh "add_example"
.IX Subsection "add_example"
.Vb 3
\& Title   : add_example
\& Usage   :
\& Function: Add one or more example(s) to this object.
.Ve
.PP
.Vb 1
\&           This is an element of the InterPro xml schema.
.Ve
.PP
.Vb 3
\& Example :
\& Returns : 
\& Args    : One or more Bio::Annotation::DBLink objects.
.Ve
.Sh "remove_examples"
.IX Subsection "remove_examples"
.Vb 3
\& Title   : remove_examples
\& Usage   :
\& Function: Remove all examples for this class.
.Ve
.PP
.Vb 1
\&           This is an element of the InterPro xml schema.
.Ve
.PP
.Vb 4
\& Example :
\& Returns : The list of previous examples as an array of
\&           Bio::Annotation::DBLink objects.
\& Args    :
.Ve
.Sh "get_external_documents"
.IX Subsection "get_external_documents"
.Vb 3
\& Title   : get_external_documents
\& Usage   : @arr = get_external_documents()
\& Function: Get the list of external_document(s) for this object.
.Ve
.PP
.Vb 1
\&           This is an element of the InterPro xml schema.
.Ve
.PP
.Vb 3
\& Example :
\& Returns : An array of Bio::Annotation::DBLink objects
\& Args    :
.Ve
.Sh "add_external_document"
.IX Subsection "add_external_document"
.Vb 3
\& Title   : add_external_document
\& Usage   :
\& Function: Add one or more external_document(s) to this object.
.Ve
.PP
.Vb 1
\&           This is an element of the InterPro xml schema.
.Ve
.PP
.Vb 3
\& Example :
\& Returns : 
\& Args    : One or more Bio::Annotation::DBLink objects.
.Ve
.Sh "remove_external_documents"
.IX Subsection "remove_external_documents"
.Vb 3
\& Title   : remove_external_documents
\& Usage   :
\& Function: Remove all external_documents for this class.
.Ve
.PP
.Vb 1
\&           This is an element of the InterPro xml schema.
.Ve
.PP
.Vb 4
\& Example :
\& Returns : The list of previous external_documents as an array of
\&           Bio::Annotation::DBLink objects.
\& Args    :
.Ve
.Sh "class_list"
.IX Subsection "class_list"
.Vb 6
\& Title   : class_list
\& Usage   : $obj->class_list($newval)
\& Function: Set/get for class list element of the InterPro xml schema
\& Example : 
\& Returns : reference to an array of Bio::Annotation::DBLink objects
\& Args    : reference to an array of Bio::Annotation::DBLink objects
.Ve
.Sh "to_string"
.IX Subsection "to_string"
.Vb 5
\& Title   : to_string()
\& Usage   : print $term->to_string();
\& Function: to_string method for InterPro terms.
\& Returns : A string representation of this InterPro term.
\& Args    :
.Ve
.SH "Deprecated methods"
.IX Header "Deprecated methods"
These are here for backwards compatibility.
.Sh "secondary_ids"
.IX Subsection "secondary_ids"
.Vb 7
\& Title   : secondary_ids
\& Usage   : $obj->secondary_ids($newval)
\& Function: This is deprecated. Use get_secondary_ids() or 
\&           add_secondary_id() instead.
\& Example : 
\& Returns : reference to an array of strings
\& Args    : reference to an array of strings
.Ve
