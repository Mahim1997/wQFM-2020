.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Bio::Map::CytoPosition 3"
.TH Bio::Map::CytoPosition 3 "2008-07-07" "perl v5.8.8" "User Contributed Perl Documentation"
.SH "NAME"
Bio::Map::CytoPosition \- Marker class with cytogenetic band storing attributes
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 6
\&  $m1 = Bio::Map::CytoPosition->new ( '-id' => 'A1',
\&                                       '-value' => '2q1-3'
\&                                             );
\&  $m2 = Bio::Map::CytoPosition->new ( '-id' => 'A2',
\&                                       '-value' => '2q2'
\&                                             );
.Ve
.PP
.Vb 3
\&  if ($m1->cytorange->overlaps($m2->cytorange)) {
\&      print "Makers overlap\en";
\&  }
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
CytoPosition is marker (Bio::Map::MarkerI compliant) with a location in a
cytogenetic map. See Bio::Map::MarkerI for more information.
.PP
Cytogenetic locations are names of bands visible in stained mitotic
eucaryotic chromosomes. The naming follows strict rules which are
consistant at least in higher vertebates, e.g. mammals. The chromosome
name preceds the band names.
.PP
The shorter arm of the chromosome is called 'p' ('petit') and usually
drawn pointing up. The lower arm is called 'q' ('queue'). The bands
are named from the region separting these, a centromere (cen), towards
the tips or telomeric regions (ter) counting from 1 upwards. Depending
of the resolution used the bands are identified with one or more
digit. The first digit determines the major band and subsequent digits
sub bands: p1 band can be divided into subbands p11, p12 and 13 and
p11 can furter be divided into subbands p11.1 and p11.2. The dot after
second digit makes it easier to read the values. A region between ands
is given from the centromere outwards towards the telomere (e.g. 2p2\-5
or 3p21\-35) or from a band in the p arm to a band in the q arm.
.SH "FEEDBACK"
.IX Header "FEEDBACK"
.Sh "Mailing Lists"
.IX Subsection "Mailing Lists"
User feedback is an integral part of the evolution of this and other
Bioperl modules. Send your comments and suggestions preferably to the
Bioperl mailing lists  Your participation is much appreciated.
.PP
.Vb 2
\&  bioperl-l@bioperl.org                  - General discussion
\&  http://bioperl.org/wiki/Mailing_lists  - About the mailing lists
.Ve
.Sh "Reporting Bugs"
.IX Subsection "Reporting Bugs"
report bugs to the Bioperl bug tracking system to help us keep track
the bugs and their resolution.  Bug reports can be submitted via the
web:
.PP
.Vb 1
\&  http://bugzilla.open-bio.org/
.Ve
.SH "AUTHOR \- Heikki Lehvaslaiho"
.IX Header "AUTHOR - Heikki Lehvaslaiho"
Email:  heikki-at-bioperl-dot-org
.SH "CONTRIBUTORS"
.IX Header "CONTRIBUTORS"
Sendu Bala  bix@sendu.me.uk
.SH "APPENDIX"
.IX Header "APPENDIX"
The rest of the documentation details each of the object
methods. Internal methods are usually preceded with a _
.Sh "cytorange"
.IX Subsection "cytorange"
.Vb 7
\& Title   : cytorange
\& Usage   : my $range = $obj->cytorange();
\& Function:
\&            Converts cytogenetic location set by value method into
\&            an integer range. The chromosome number determines the
\&            "millions" in the values.  Human X and Y chromosome
\&            symbols are represented by values 100 and 101.
.Ve
.PP
.Vb 2
\&            The localization within chromosomes are converted into
\&            values between the range of 0 and 200,000:
.Ve
.PP
.Vb 3
\&            pter                    cen                       qter
\&            |------------------------|-------------------------|
\&            0                     100,000                   200,000
.Ve
.PP
.Vb 4
\&            The values between -100,000 through 0 for centromere to
\&            100,000 would have reflected the band numbering better but
\&            use of positive integers was choosen since the
\&            transformation is very easy. These values are not metric.
.Ve
.PP
.Vb 9
\&            Each band defines a range in a chromosome. A band string
\&            is converted into a range by padding it with lower and and
\&            higher end digits (for q arm: '0' and '9') to the length
\&            of five. The arm and chromosome values are added to these:
\&            e.g. 21000 & 21999 (band 21) + 100,000 (q arm) + 2,000,000
\&            (chromosome 2) => 2q21 : 2,121,000 .. 2,121,999. Note that
\&            this notation breaks down if there is a band or a subband
\&            using digit 9 in its name!  This is not the case in human
\&            karyotype.
.Ve
.PP
.Vb 1
\&            The full algorithm used for bands:
.Ve
.PP
.Vb 6
\&            if arm is 'q' then
\&               pad char for start is '0', for end '9'
\&               range is chromosome + 100,000 + padded range start or end
\&            elsif arm is 'p' then
\&               pad char for start is '9', for end '0'
\&               range is chromosome + 100,000 - padded range start or end
.Ve
.PP
.Vb 2
\& Returns : Bio::Range object or undef
\& Args    : none
.Ve
.Sh "range2value"
.IX Subsection "range2value"
.Vb 6
\& Title   : range2value
\& Usage   : my $value = $obj->range2value($range);
\& Function: Sets and returns the value string based on start and end values of
\&           the Bio::Range object passes as an argument.
\& Returns : string or false
\& Args    : Bio::Range object
.Ve
.Sh "value"
.IX Subsection "value"
.Vb 5
\& Title   : value
\& Usage   : my $pos = $position->value;
\& Function: Get/Set the value for this postion
\& Returns : scalar, value
\& Args    : none to get, OR scalar to set
.Ve
.Sh "numeric"
.IX Subsection "numeric"
.Vb 6
\& Title   : numeric
\& Usage   : my $num = $position->numeric;
\& Function: Read-only method that is guarantied to return a numeric 
\&           representation of the start of this position.
\& Returns : int (the start of the range)
\& Args    : optional Bio::RangeI object
.Ve
.Sh "chr"
.IX Subsection "chr"
.Vb 5
\& Title   : chr
\& Usage   : my $mychr = $position->chr();
\& Function: Get/Set method for the chromosome string of the location.
\& Returns : chromosome value
\& Args    : none to get, OR scalar to set
.Ve
