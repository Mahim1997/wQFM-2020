.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Bio::Graphics::Glyph::merged_alignment 3"
.TH Bio::Graphics::Glyph::merged_alignment 3 "2008-07-07" "perl v5.8.8" "User Contributed Perl Documentation"
.SH "NAME"
Bio::Graphics::Glyph::merged_alignment \- The "merged_alignment" glyph
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  See L<Bio::Graphics::Panel> and L<Bio::Graphics::Glyph>.
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This glyph acts like graded_segments but the bgcolor of segments 
(sub\-feature) is controlled by binned scores.  It also supports
semantic zooming to optimize glyph drawing for larger sequence
displays.
.Sh "\s-1OPTIONS\s0"
.IX Subsection "OPTIONS"
The following options are standard among all Glyphs.  See
Bio::Graphics::Glyph for a full explanation.
.PP
.Vb 2
\&  Option      Description                      Default
\&  ------      -----------                      -------
.Ve
.PP
.Vb 1
\&  -fgcolor      Foreground color               black
.Ve
.PP
.Vb 1
\&  -outlinecolor Synonym for -fgcolor
.Ve
.PP
.Vb 1
\&  -bgcolor      Background color               turquoise
.Ve
.PP
.Vb 1
\&  -fillcolor    Synonym for -bgcolor
.Ve
.PP
.Vb 1
\&  -linewidth    Line width                     1
.Ve
.PP
.Vb 1
\&  -height       Height of glyph                10
.Ve
.PP
.Vb 1
\&  -font         Glyph font                     gdSmallFont
.Ve
.PP
.Vb 1
\&  -connector    Connector type                 0 (false)
.Ve
.PP
.Vb 2
\&  -connector_color
\&                Connector color                black
.Ve
.PP
.Vb 1
\&  -label        Whether to draw a label        0 (false)
.Ve
.PP
.Vb 1
\&  -description  Whether to draw a description  0 (false)
.Ve
.PP
.Vb 1
\&  -hilite       Highlight color                undef (no color)
.Ve
.PP
In addition, the merged-alignment glyph recognizes the following
glyph-specific options:
.PP
.Vb 2
\&  Option      Description                  Default
\&  ------      -----------                  -------
.Ve
.PP
.Vb 2
\&  -max_score  Maximum value of the         Calculated
\&              feature's "score" attribute
.Ve
.PP
.Vb 2
\&  -min_score  Minimum value of the         Calculated
\&              feature's "score" attribute
.Ve
.PP
.Vb 2
\&  -bincolors  Colors assigned to bins      lightgrey powderblue cornflowerblue blue
\&              (in order)
.Ve
.PP
.Vb 2
\&  -bins       Bins to which scores are     Calculated
\&              assigned
.Ve
.PP
.Vb 3
\&  -merge_parts                             0 (false)
\&              Whether to simplify the 
\&              alignment at low magnification
.Ve
.PP
.Vb 2
\&  -max_gap    Do not merge across gaps     Calculated
\&              that exceed this threshold
.Ve
.PP
If max_score and min_score are not specified, then the glyph will
calculate the local maximum and minimum scores at run time.
.PP
If the bins are not specified, they will be calculated
based on the number of colors assigned and the local
(or user\-specified) minimum and maximum scores.
Calculated bins are equal in size.  
.PP
User-specified bins are expressed as ranges,
.PP
.Vb 1
\&  bins  = 0-50 50-70 70-90 90-100
.Ve
.PP
where each range means greater than the lower number and
less than or equal to the higher number.
.Sh "Simplifying the display of alignment features for large segments"
.IX Subsection "Simplifying the display of alignment features for large segments"
The \*(L"merge_parts\*(R" option is used for semantic zooming.
Specifically, if features are small and dense, they
will not be displayed very well for large segments and the 
color-coding will be lost.  If merge-parts is set to a
true value, adjacent alignment parts will be merged until a gap
exceeding a calculated or user-specified value is encountered. 
Unless specified, the maximum gap allowed for merging adjacent features is
calculated as (L/10000)*(L/500), where L = the length of the sequence
displayed in the browser.  The exponentially increasing gap threshold
allows more aggressive merging of alignment features as the size of
the displayed sequence grows larger.
.PP
The score of the merged feature is calculated as a weighted average.
For example, consider two adjacent HSPs that are each 400 bp in 
length and have scores of 60% and 70%.  If the merge_parts option
is set to a true value, the two HSPs would be merged in the display to
a single 800 bp alignment block with an average score of 65%.
.PP
The merge_parts option is turned off by default.
.Sh "\s-1SAMPLE\s0 \s-1CONFIGURATION\s0"
.IX Subsection "SAMPLE CONFIGURATION"
Sample gbrowse configuration stanzas for an alignment feature
using this glyph.  The scores are assumed to be expressed 
as percent identity (0\-100).
.PP
.Vb 12
\& # base configuration
\& [BLASTZ]
\& feature      = blastz_alignment
\& glyph        = merged_alignment
\& bincolors    = #A0A0A0 powderblue cornflowerblue blue
\& bins         = 60-70 70-80 80-90 90-100
\& category     = Sequence Similarity Tracks
\& height       = 6
\& bump         = 1
\& label        = 1
\& fgcolor      = black
\& key          = BLASTZ
.Ve
.PP
Semantic zooming with defined maximum gap between
merged features for different zoom levels
.PP
.Vb 7
\& # if the displayed segment is >= 20000 in length,
\& # use the merge_parts option to simplify the alignment
\& # display
\& [BLASTZ:20000]
\& feature      = blastz_alignment
\& merge_parts  = 1
\& max_gap      = 50 # do not merge across gaps > 50 bp
.Ve
.PP
.Vb 5
\& # if the displayed segment is >= 50000 in length
\& [BLASTZ:50000]
\& feature      = blastz_alignment
\& merge_parts  = 1
\& max_gap      = 500 # do not merge across gaps > 500 bp
.Ve
.PP
\&\-\-OR\*(-- 
.PP
Semantic zooming with dynamically calculated maximum
gap
.PP
.Vb 4
\& # if the displayed segment is >= 20000 in length,
\& [BLASTZ:20000]
\& feature      = blastz_alignment
\& merge_parts  = 1
.Ve
.SH "BUGS"
.IX Header "BUGS"
Please report them.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Bio::Graphics::Panel,
Bio::Graphics::Glyph
Bio::DB::GFF,
Bio::SeqI,
Bio::SeqFeatureI,
Bio::Das,
\&\s-1GD\s0
.SH "AUTHOR"
.IX Header "AUTHOR"
Sheldon McKay <mckays@cshl.edu>
.PP
Copyright (c) 2005 Cold Spring Harbor Laboratory
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.  See \s-1DISCLAIMER\s0.txt for
disclaimers of warranty.
