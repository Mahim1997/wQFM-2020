.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Bio::Map::Position 3"
.TH Bio::Map::Position 3 "2008-07-07" "perl v5.8.8" "User Contributed Perl Documentation"
.SH "NAME"
Bio::Map::Position \- A single position of a Marker, or the range over which
                     that marker lies, in a Map
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 5
\&    use Bio::Map::Position;
\&    my $position = new Bio::Map::Position(-map => $map, 
\&                                          -element => $marker,
\&                                          -value => 100
\&                                          );
.Ve
.PP
.Vb 5
\&        my $position_with_range = new Bio::Map::Position(-map => $map, 
\&                                          -element => $marker,
\&                                          -start => 100,
\&                                          -length => 10
\&                                          );
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This object is an implementation of the PositionI interface that
handles the specific values of a position. This allows a map element
(e.g. Marker) to have multiple positions within a map and still be
treated as a single entity.
.PP
This handles the concept of a relative map in which the order of
elements and the distance between them is known, but does not
directly handle the case when distances are unknown \- in that case
arbitrary values must be assigned for position values.
.PP
No units are assumed here \- units are handled by context of which Map
a position is placed in or the subclass of this Position.
.SH "FEEDBACK"
.IX Header "FEEDBACK"
.Sh "Mailing Lists"
.IX Subsection "Mailing Lists"
User feedback is an integral part of the evolution of this and other
Bioperl modules. Send your comments and suggestions preferably to
the Bioperl mailing list.  Your participation is much appreciated.
.PP
.Vb 2
\&  bioperl-l@bioperl.org                  - General discussion
\&  http://bioperl.org/wiki/Mailing_lists  - About the mailing lists
.Ve
.Sh "Reporting Bugs"
.IX Subsection "Reporting Bugs"
Report bugs to the Bioperl bug tracking system to help us keep track
of the bugs and their resolution. Bug reports can be submitted via the
web:
.PP
.Vb 1
\&  http://bugzilla.open-bio.org/
.Ve
.SH "AUTHOR \- Jason Stajich"
.IX Header "AUTHOR - Jason Stajich"
Email jason@bioperl.org
.SH "CONTRIBUTORS"
.IX Header "CONTRIBUTORS"
Lincoln Stein, lstein@cshl.org
Heikki Lehvaslaiho, heikki-at-bioperl-dot-org
Chad Matsalla, bioinformatics1@dieselwurks.com
Sendu Bala, bix@sendu.me.uk
.SH "APPENDIX"
.IX Header "APPENDIX"
The rest of the documentation details each of the object methods.
Internal methods are usually preceded with a _
.Sh "new"
.IX Subsection "new"
.Vb 7
\& Title   : new
\& Usage   : my $obj = new Bio::Map::Position();
\& Function: Builds a new Bio::Map::Position object 
\& Returns : Bio::Map::Position
\& Args    : -map      => Bio::Map::MapI object
\&           -element  => Bio::Map::MappableI object
\&           -relative => Bio::Map::RelativeI object
.Ve
.PP
.Vb 5
\&           * If this position has no range, or if a single value can describe
\&             the range *
\&           -value => scalar             : something that describes the single
\&                                          point position or range of this
\&                                          Position, most likely an int
.Ve
.PP
.Vb 4
\&           * Or if this position has a range, at least two of *
\&           -start => int                : value of the start co-ordinate
\&           -end => int                  : value of the end co-ordinate
\&           -length => int               : length of the range
.Ve
.Sh "relative"
.IX Subsection "relative"
.Vb 9
\&  Title   : relative
\&  Usage   : my $relative = $position->relative();
\&            $position->relative($relative);
\&  Function: Get/set the thing this Position's coordinates (numerical(), start(),
\&            end()) are relative to, as described by a Relative object.
\&  Returns : Bio::Map::RelativeI (default is one describing "relative to the
\&            start of the Position's map")
\&  Args    : none to get, OR
\&            Bio::Map::RelativeI to set
.Ve
.Sh "absolute"
.IX Subsection "absolute"
.Vb 9
\&  Title   : absolute
\&  Usage   : my $absolute = $position->absolute();
\&            $position->absolute($absolute);
\&  Function: Get/set how this Position's co-ordinates (numerical(), start(),
\&            end()) are reported. When absolute is off, co-ordinates are
\&            relative to the thing described by relative(). Ie. the value
\&            returned by start() will be the same as the value you set start()
\&            to. When absolute is on, co-ordinates are converted to be relative
\&            to the start of the map.
.Ve
.PP
.Vb 5
\&            So if relative() currently points to a Relative object describing
\&            "relative to another position which is 100 bp from the start of
\&            the map", this Position's start() had been set to 50 and absolute()
\&            returns 1, $position->start() will return 150. If absolute() returns
\&            0 in the same situation, $position->start() would return 50.
.Ve
.PP
.Vb 3
\&  Returns : boolean (default 0)
\&  Args    : none to get, OR
\&            boolean to set
.Ve
.Sh "value"
.IX Subsection "value"
.Vb 5
\& Title   : value
\& Usage   : my $pos = $position->value;
\& Function: Get/Set the value for this postion
\& Returns : scalar, value
\& Args    : [optional] new value to set
.Ve
.Sh "numeric"
.IX Subsection "numeric"
.Vb 8
\& Title   : numeric
\& Usage   : my $num = $position->numeric;
\& Function: Read-only method that is guaranteed to return a numeric 
\&           representation of the start of this position. 
\& Returns : scalar numeric
\& Args    : none to get the co-ordinate normally (see absolute() method), OR
\&           Bio::Map::RelativeI to get the co-ordinate converted to be
\&           relative to what this Relative describes.
.Ve
.Sh "start"
.IX Subsection "start"
.Vb 9
\&  Title   : start
\&  Usage   : my $start = $position->start();
\&            $position->start($start);
\&  Function: Get/set the start co-ordinate of this position.
\&  Returns : the start of this position
\&  Args    : scalar numeric to set, OR
\&            none to get the co-ordinate normally (see absolute() method), OR
\&            Bio::Map::RelativeI to get the co-ordinate converted to be
\&            relative to what this Relative describes.
.Ve
.Sh "end"
.IX Subsection "end"
.Vb 9
\&  Title   : end
\&  Usage   : my $end = $position->end();
\&            $position->end($end);
\&  Function: Get/set the end co-ordinate of this position.
\&  Returns : the end of this position
\&  Args    : scalar numeric to set, OR
\&            none to get the co-ordinate normally (see absolute() method), OR
\&            Bio::Map::RelativeI to get the co-ordinate converted to be
\&            relative to what this Relative describes.
.Ve
.Sh "length"
.IX Subsection "length"
.Vb 7
\&  Title   : length
\&  Usage   : $length = $position->length();
\&  Function: Get/set the length of this position's range, changing the end() if
\&            necessary. Getting and even setting the length will fail if both
\&            start() and end() are not already defined.
\&  Returns : the length of this range
\&  Args    : none to get, OR scalar numeric (>0) to set.
.Ve
.Sh "sortable"
.IX Subsection "sortable"
.Vb 8
\& Title   : sortable
\& Usage   : my $num = $position->sortable();
\& Function: Read-only method that is guaranteed to return a value suitable
\&           for correctly sorting this kind of position amongst other positions
\&           of the same kind on the same map. Note that sorting different kinds
\&           of position together is unlikely to give sane results.
\& Returns : numeric
\& Args    : none
.Ve
.Sh "toString"
.IX Subsection "toString"
.Vb 6
\&  Title   : toString
\&  Usage   : print $position->toString(), "\en";
\&  Function: stringifies this range
\&  Returns : a string representation of the range of this Position
\&  Args    : optional Bio::Map::RelativeI to have the co-ordinates reported
\&            relative to the thing described by that Relative
.Ve
.Sh "absolute_relative"
.IX Subsection "absolute_relative"
.Vb 7
\& Title   : absolute_relative
\& Usage   : my $rel = $position->absolute_relative();
\& Function: Get a relative describing the start of the map. This is useful for
\&           supplying to the coordinate methods (start(), end() etc.) to get
\&           the temporary effect of having set absolute(1).
\& Returns : Bio::Map::Relative
\& Args    : none
.Ve
