.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Bio::Phenotype::OMIM::OMIMentryAllelicVariant 3"
.TH Bio::Phenotype::OMIM::OMIMentryAllelicVariant 3 "2008-07-07" "perl v5.8.8" "User Contributed Perl Documentation"
.SH "NAME"
Bio::Phenotype::OMIM::OMIMentryAllelicVariant \- Representation of a allelic
variant of the OMIM database
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  use Bio::Phenotype::OMIM::OMIMentryAllelicVariant;
.Ve
.PP
.Vb 8
\&  $av = Bio::Phenotype::OMIM::OMIMentryAllelicVariant->new( -number               => ".0001",
\&                                                            -title                => "ALCOHOL INTOLERANCE",
\&                                                            -symbol               => "ALDH2*2",
\&                                                            -description          => "The ALDH2*2-encoded ...",
\&                                                            -aa_ori               => "GLU",
\&                                                            -aa_mut               => "LYS",
\&                                                            -position             => 487,
\&                                                            -additional_mutations => "IVS4DS, G-A, +1" );
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This class models the allelic variant of the \s-1OMIM\s0 database.
This class is intended to be used together with a \s-1OMIM\s0 entry class. 
.SH "FEEDBACK"
.IX Header "FEEDBACK"
.Sh "Mailing Lists"
.IX Subsection "Mailing Lists"
User feedback is an integral part of the evolution of this and other
Bioperl modules. Send your comments and suggestions preferably to one
of the Bioperl mailing lists.  Your participation is much appreciated.
.PP
.Vb 2
\&  bioperl-l@bioperl.org                  - General discussion
\&  http://bioperl.org/wiki/Mailing_lists  - About the mailing lists
.Ve
.Sh "Reporting Bugs"
.IX Subsection "Reporting Bugs"
Report bugs to the Bioperl bug tracking system to help us keep track
the bugs and their resolution.  Bug reports can be submitted via the
web:
.PP
.Vb 1
\&  http://bugzilla.open-bio.org/
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Christian M. Zmasek
.PP
Email: czmasek@gnf.org  or  cmzmasek@yahoo.com
.PP
\&\s-1WWW:\s0   http://www.genetics.wustl.edu/eddy/people/zmasek/
.PP
Address: 
.PP
.Vb 3
\&  Genomics Institute of the Novartis Research Foundation
\&  10675 John Jay Hopkins Drive
\&  San Diego, CA 92121
.Ve
.SH "APPENDIX"
.IX Header "APPENDIX"
The rest of the documentation details each of the object
methods.
.Sh "new"
.IX Subsection "new"
.Vb 19
\& Title   : new
\& Usage   : $av = Bio::Phenotype::OMIM::OMIMentryAllelicVariant->new( -number               => ".0001",
\&                                                                     -title                => "ALCOHOL INTOLERANCE",
\&                                                                     -symbol               => "ALDH2*2",
\&                                                                     -description          => "The ALDH2*2-encoded ...",
\&                                                                     -aa_ori               => "GLU",
\&                                                                     -aa_mut               => "LYS",
\&                                                                     -position             => 487,
\&                                                                     -additional_mutations => "IVS4DS, G-A, +1" );                      
\& Function: Creates a new OMIMentryAllelicVariant object.
\& Returns : A new OMIMentryAllelicVariant object.
\& Args    : -number               => the OMIM allelic variant number
\&           -title                => the title
\&           -symbol               => a symbol
\&           -description          => a description
\&           -aa_ori               => the original amino acid
\&           -aa_mut               => the mutated amino acid
\&           -position             => the position of the mutation
\&           -additional_mutations => free form description of additional mutations
.Ve
.Sh "init"
.IX Subsection "init"
.Vb 5
\& Title   : init()
\& Usage   : $av->init();   
\& Function: Initializes this OMIMentryAllelicVariant to all "".
\& Returns : 
\& Args    :
.Ve
.Sh "number"
.IX Subsection "number"
.Vb 8
\& Title   : number
\& Usage   : $av->number( ".0001" );
\&           or
\&           print $av->number();
\& Function: Set/get for the OMIM allelic variant number of this
\&           OMIMentryAllelicVariant.
\& Returns : The OMIM allelic variant number.
\& Args    : The OMIM allelic variant number (optional).
.Ve
.Sh "title"
.IX Subsection "title"
.Vb 7
\& Title   : title
\& Usage   : $av->title( "ALCOHOL INTOLERANCE" );
\&           or
\&           print $av->title();
\& Function: Set/get for the title of this OMIMentryAllelicVariant.
\& Returns : The title.
\& Args    : The title (optional).
.Ve
.Sh "symbol"
.IX Subsection "symbol"
.Vb 7
\& Title   : symbol
\& Usage   : $av->symbol( "ALDH2*2" );
\&           or
\&           print $av->symbol();
\& Function: Set/get for the symbol of this OMIMentryAllelicVariant.
\& Returns : A symbol.
\& Args    : A symbol (optional).
.Ve
.Sh "description"
.IX Subsection "description"
.Vb 7
\& Title   : description
\& Usage   : $av->description( "The ALDH2*2-encoded protein has a change ..." );
\&           or
\&           print $av->description();
\& Function: Set/get for the description of this OMIMentryAllelicVariant.
\& Returns : A description.
\& Args    : A description (optional).
.Ve
.Sh "aa_ori"
.IX Subsection "aa_ori"
.Vb 7
\& Title   : aa_ori
\& Usage   : $av->aa_ori( "GLU" );
\&           or
\&           print $av->aa_ori();
\& Function: Set/get for the original amino acid(s).
\& Returns : The original amino acid(s).
\& Args    : The original amino acid(s) (optional).
.Ve
.Sh "aa_mut"
.IX Subsection "aa_mut"
.Vb 7
\& Title   : aa_mut
\& Usage   : $av->aa_mut( "LYS" );
\&           or
\&           print $av->aa_mut();
\& Function: Set/get for the mutated amino acid(s).
\& Returns : The mutated amino acid(s).
\& Args    : The mutated amino acid(s) (optional).
.Ve
.Sh "position"
.IX Subsection "position"
.Vb 7
\& Title   : position
\& Usage   : $av->position( 487 );
\&           or
\&           print $av->position();
\& Function: Set/get for the position of the mutation.
\& Returns : The position of the mutation.
\& Args    : The position of the mutation (optional).
.Ve
.Sh "additional_mutations"
.IX Subsection "additional_mutations"
.Vb 7
\& Title   : additional_mutations
\& Usage   : $av->additional_mutations( "1-BP DEL, 911T" );
\&           or
\&           print $av->additional_mutations();
\& Function: Set/get for free form description of (additional) mutation(s).
\& Returns : description of (additional) mutation(s).
\& Args    : description of (additional) mutation(s) (optional).
.Ve
.Sh "to_string"
.IX Subsection "to_string"
.Vb 5
\& Title   : to_string()
\& Usage   : print $av->to_string();
\& Function: To string method for OMIMentryAllelicVariant objects.
\& Returns : A string representations of this OMIMentryAllelicVariant.
\& Args    :
.Ve
