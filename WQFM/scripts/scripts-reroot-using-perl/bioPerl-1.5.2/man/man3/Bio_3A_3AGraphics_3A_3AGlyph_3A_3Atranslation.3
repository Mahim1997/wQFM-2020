.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Bio::Graphics::Glyph::translation 3"
.TH Bio::Graphics::Glyph::translation 3 "2008-07-07" "perl v5.8.8" "User Contributed Perl Documentation"
.SH "NAME"
Bio::Graphics::Glyph::translation \- The "6\-frame translation" glyph
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  See L<Bio::Graphics::Panel> and L<Bio::Graphics::Glyph>.
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This glyph draws the conceptual translation of \s-1DNA\s0 sequences.  At high
magnifications, it simply draws lines indicating open reading frames.
At low magnifications, it draws a conceptual protein translation.
Options can be used to set 1\-frame, 3\-frame or 6\-frame translations.
.Sh "\s-1OPTIONS\s0"
.IX Subsection "OPTIONS"
The following options are standard among all Glyphs.  See
Bio::Graphics::Glyph for a full explanation.
.PP
.Vb 2
\&  Option      Description                      Default
\&  ------      -----------                      -------
.Ve
.PP
.Vb 1
\&  -fgcolor      Foreground color               black
.Ve
.PP
.Vb 1
\&  -outlinecolor Synonym for -fgcolor
.Ve
.PP
.Vb 1
\&  -bgcolor      Background color               turquoise
.Ve
.PP
.Vb 1
\&  -fillcolor    Synonym for -bgcolor
.Ve
.PP
.Vb 1
\&  -linewidth    Line width                     1
.Ve
.PP
.Vb 1
\&  -height       Height of glyph                10
.Ve
.PP
.Vb 1
\&  -font         Glyph font                     gdSmallFont
.Ve
.PP
.Vb 1
\&  -connector    Connector type                 0 (false)
.Ve
.PP
.Vb 2
\&  -connector_color
\&                Connector color                black
.Ve
.PP
.Vb 1
\&  -label        Whether to draw a label        0 (false)
.Ve
.PP
.Vb 1
\&  -description  Whether to draw a description  0 (false)
.Ve
.PP
.Vb 1
\&  -hilite       Highlight color                undef (no color)
.Ve
.PP
In addition to the common options, the following glyph-specific
options are recognized:
.PP
.Vb 2
\&  Option        Description                 Default
\&  ------        -----------                 -------
.Ve
.PP
.Vb 3
\&  -translation  Type of translation to      1frame
\&                perform.  One of "1frame",
\&                "3frame", or "6frame"
.Ve
.PP
.Vb 2
\&  -strand       Forward (+1) or reverse (-1) +1
\&                translation.
.Ve
.PP
.Vb 1
\&  -frame0       Color for the first frame    fgcolor
.Ve
.PP
.Vb 1
\&  -frame1       Color for the second frame   fgcolor
.Ve
.PP
.Vb 1
\&  -frame2       Color for the third frame    fgcolor
.Ve
.PP
.Vb 2
\&  -gridcolor    Color for the horizontal     lightgrey
\&                lines of the reading frames
.Ve
.PP
.Vb 2
\&  -start_codons Draw little arrowheads       0 (false)
\&                indicating start codons
.Ve
.PP
.Vb 2
\&  -stop_codons  Draw little vertical ticks   1 (true)
\&                indicating stop codons
.Ve
.PP
.Vb 2
\&  -arrow_height Height of the start codon    1
\&                arrowheads
.Ve
.PP
.Vb 2
\&  -show_sequence Show the amino acid sequence 1 (true)
\&                if there's room.
.Ve
.PP
.Vb 2
\&  -triletter_code Show the 3-letter amino acid 0 (false)
\&                code if there's room
.Ve
.PP
.Vb 1
\&  -codontable   Codon table to use           1 (see Bio::Tools::CodonTable)
.Ve
.SH "SUGGESTED STANZA FOR GENOME BROWSER"
.IX Header "SUGGESTED STANZA FOR GENOME BROWSER"
This produces a nice gbrowse display in which the \s-1DNA/GC\s0 Content glyph
is sandwiched between the forward and reverse three-frame
translations.  The frames are color-coordinated with the example
configuration for the \*(L"cds\*(R" glyph.
.PP
.Vb 11
\& [TranslationF]
\& glyph        = translation
\& global feature = 1
\& frame0       = cadetblue
\& frame1       = blue
\& frame2       = darkblue
\& height       = 20
\& fgcolor      = purple
\& strand       = +1
\& translation  = 3frame
\& key          = 3-frame translation (forward)
.Ve
.PP
.Vb 7
\& [DNA/GC Content]
\& glyph        = dna
\& global feature = 1
\& height       = 40
\& do_gc        = 1
\& fgcolor      = red
\& axis_color   = blue
.Ve
.PP
.Vb 11
\& [TranslationR]
\& glyph        = translation
\& global feature = 1
\& frame0       = darkred
\& frame1       = red
\& frame2       = crimson
\& height       = 20
\& fgcolor      = blue
\& strand       = -1
\& translation  = 3frame
\& key          = 3-frame translation (reverse)
.Ve
.SH "BUGS"
.IX Header "BUGS"
Please report them.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Bio::Graphics::Panel,
Bio::Graphics::Glyph,
Bio::Graphics::Glyph::arrow,
Bio::Graphics::Glyph::cds,
Bio::Graphics::Glyph::crossbox,
Bio::Graphics::Glyph::diamond,
Bio::Graphics::Glyph::dna,
Bio::Graphics::Glyph::dot,
Bio::Graphics::Glyph::ellipse,
Bio::Graphics::Glyph::extending_arrow,
Bio::Graphics::Glyph::generic,
Bio::Graphics::Glyph::graded_segments,
Bio::Graphics::Glyph::heterogeneous_segments,
Bio::Graphics::Glyph::line,
Bio::Graphics::Glyph::pinsertion,
Bio::Graphics::Glyph::primers,
Bio::Graphics::Glyph::rndrect,
Bio::Graphics::Glyph::segments,
Bio::Graphics::Glyph::ruler_arrow,
Bio::Graphics::Glyph::toomany,
Bio::Graphics::Glyph::transcript,
Bio::Graphics::Glyph::transcript2,
Bio::Graphics::Glyph::translation,
Bio::Graphics::Glyph::triangle,
Bio::DB::GFF,
Bio::SeqI,
Bio::SeqFeatureI,
Bio::Das,
\&\s-1GD\s0
.SH "AUTHOR"
.IX Header "AUTHOR"
Lincoln Stein <lstein@cshl.org>.
.PP
Copyright (c) 2001 Cold Spring Harbor Laboratory
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.  See \s-1DISCLAIMER\s0.txt for
disclaimers of warranty.
