.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Bio::Graphics::Glyph::image 3"
.TH Bio::Graphics::Glyph::image 3 "2008-07-07" "perl v5.8.8" "User Contributed Perl Documentation"
.SH "NAME"
Bio::Graphics::Glyph::image \- A glyph that draws photographs & other images
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 3
\& use Bio::Graphics;
\& use Bio::Seq;
\& use Bio::SeqFeature::Generic;
.Ve
.PP
.Vb 1
\& my $bsg = 'Bio::SeqFeature::Generic';
.Ve
.PP
.Vb 1
\& my $seq    = Bio::Seq->new(-length=>1000);
.Ve
.PP
.Vb 3
\& my $whole  = $bsg->new(-display_name => 'Clone82',
\&                        -start        => 1,
\&                        -end          => $seq->length);
.Ve
.PP
.Vb 7
\& my $image1 = $bsg->new(-start        => 100,
\&                        -end          => 300,
\&                        -display_name => 'Excretory System',
\&                        -tag=>{
\&                              image=>"http://www.flybase.org/anatomy/image-browser_files/excretory-system.gif"
\&                              }
\&                       );
.Ve
.PP
.Vb 7
\& my $image2 = $bsg->new(-start        => 500,
\&                        -end          => 800,
\&                        -display_name => 'Expression Pattern',
\&                        -tag=>{
\&                              image=>"http://www.flybase.org/anatomy/image-browser_files/embryonic-expression-pattern.gif"
\&                              }
\&                       );
.Ve
.PP
.Vb 7
\& my $panel = Bio::Graphics::Panel->new(-length    => $seq->length,
\&                                       -width     => 800,
\&                                       -truecolor => 1,
\&                                       -key_style => 'between',
\&                                       -pad_left  => 10,
\&                                       -pad_right => 10,
\&                                      );
.Ve
.PP
.Vb 6
\& $panel->add_track($whole,
\&                   -glyph    => 'arrow',
\&                   -double   => 1,
\&                   -tick     => 2,
\&                   -label    => 1,
\&                   );
.Ve
.PP
.Vb 4
\& $panel->add_track([$image1,$image2],
\&                   -glyph    => 'image',
\&                   -label    => 1,
\&                   -key       => 'Example images');
.Ve
.PP
.Vb 2
\& binmode STDOUT;
\& print $panel->png;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This glyph inserts an image into the track at the indicated feature
coordinates. The image can be in \s-1PNG\s0, \s-1JPEG\s0, \s-1GIF\s0 or \s-1GD\s0 format, and can
be either 8\-bit or 24\-bit (\*(L"truecolor\*(R"). The image can be located on
the local filesystem or located at a remote \s-1URL\s0 (provided that you
have the \s-1LWP\s0 module installed).
.PP
When working with photographic images, you may wish to have
Bio::Graphics::Panel create 24\-bit (truecolor) images in order to
avoid running out of colors. The symptom of this is that images appear
posterized. To turn on truecolor images, pass the \-truecolor option to
Bio::Graphics::Panel as shown in the synopsis.
.Sh "\s-1OPTIONS\s0"
.IX Subsection "OPTIONS"
The following options are standard among all Glyphs.  See
Bio::Graphics::Glyph for a full explanation.
.PP
.Vb 2
\&  Option      Description                      Default
\&  ------      -----------                      -------
.Ve
.PP
.Vb 1
\&  -fgcolor      Foreground color               black
.Ve
.PP
.Vb 1
\&  -outlinecolor Synonym for -fgcolor
.Ve
.PP
.Vb 1
\&  -bgcolor      Background color               turquoise
.Ve
.PP
.Vb 1
\&  -fillcolor    Synonym for -bgcolor
.Ve
.PP
.Vb 1
\&  -linewidth    Line width                     1
.Ve
.PP
.Vb 1
\&  -height       Height of glyph                10
.Ve
.PP
.Vb 1
\&  -font         Glyph font                     gdSmallFont
.Ve
.PP
.Vb 1
\&  -connector    Connector type                 0 (false)
.Ve
.PP
.Vb 2
\&  -connector_color
\&                Connector color                black
.Ve
.PP
.Vb 1
\&  -label        Whether to draw a label        0 (false)
.Ve
.PP
.Vb 1
\&  -description  Whether to draw a description  0 (false)
.Ve
.PP
.Vb 1
\&  -hilite       Highlight color                undef (no color)
.Ve
.PP
The following additional options are available to the \*(L"image\*(R" glyph:
.PP
.Vb 2
\&  Option            Description                       Default
\&  ------            -----------                       -------
.Ve
.PP
.Vb 2
\&  -image            Specify the image path or URL     none
\&                    to use for this feature.
.Ve
.PP
.Vb 3
\&  -image_prefix     String to prepend to              none
\&                    each image path. You may prepend
\&                    a directory or a partial URL.
.Ve
.PP
.Vb 4
\&  -vertical_spacing Vertical distance from the box    20
\&                    that shows the physical span of
\&                    of the feature to the top of
\&                    the picture (in pixels).
.Ve
.PP
.Vb 3
\&  -glyph_delegate   Glyph to use for the part of      'generic'
\&                    the glyph that shows the physical
\&                    span of the feature.
.Ve
.PP
Set \fB\-vertical_spacing\fR to 0 to completely suppress the diagonal
lines that connect the physical span of the feature to the image.
.Sh "Specifying the Image"
.IX Subsection "Specifying the Image"
The path to the image can be specified in two ways. First, you can
place it in the feature itself using a tag named \*(L"image\*(R". Second, you
can specify it as a track option using a callback:
.PP
.Vb 6
\&  $panel->add_track(\e@features,
\&                    -glyph=>'image',
\&                    -image => sub { my $feature = shift;
\&                                    my $image_path = do_something();
\&                                    return $image }
\&                    );
.Ve
.PP
You can of course give \-image a constant string, in which case each
feature will show the same image.
.PP
The image can be a file on the local operating system or a
\&\s-1URL\s0. However, \s-1URL\s0 fetching will only work if the \s-1LWP\s0 module is
installed on your system. Otherwise the glyph will fail with an error
message.
.PP
If the image is a relative path (it does not begin with a slash or a
\&\s-1URL\s0 protocol), then the contents of \-image_prefix will be prepended to
it. This allows you to specify images that are relative to a
particular directory or a partial \s-1URL\s0. Example:
.PP
.Vb 4
\&  $panel->add_track(\e@features,
\&                    -glyph => 'image',
\&                    -image_prefix => 'http://www.flybase.org/anatomy/image-browser_files',
\&                   );
.Ve
.PP
This specifies that each feature's \*(L"image\*(R" tag is to be appended to
the partial FlyBase \s-1URL\s0, thereby saving space.
.Sh "Glyph Delegation"
.IX Subsection "Glyph Delegation"
The image glyph consists of two parts: an upper part that shows the
extent of the feature in base pair coordinates, and a lower part that
shows the image. No scaling of the image is done; its height and width
are fixed.
.PP
By default the upper part uses the \*(L"generic\*(R" glyph, which is a simple
rectangle filled with the bgcolor and outlined with the fgcolor. To
use a different glyph in the upper part, specify the \-glyph_delegate
option, giving the name of the glyph you wish to use. For instance, to
use the \*(L"span\*(R" glyph:
.PP
.Vb 4
\&  $panel->add_track(\e@features,
\&                    -glyph          => 'image',
\&                    -glyph_delegate => 'span'
\&                   );
.Ve
.PP
This feature does not work with all glyphs, and in particular requires
a recent \s-1CVS\s0 checkout of Bio::Perl to work properly with the \*(L"arrow\*(R",
\&\*(L"span\*(R" and \*(L"primers\*(R" glyphs (support for the feature did not make it
into version 1.5).
.SH "BUGS AND LIMITATIONS"
.IX Header "BUGS AND LIMITATIONS"
This glyph does not work with \s-1GD::SVG\s0. If you try to render it onto a
\&\s-1GD::SVG\s0 panel, the image will be shown as a gray box. This will be
fixed in a future version of \s-1GD::SVG\s0.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Bio::Graphics::Panel,
Bio::Graphics::Glyph,
Bio::Graphics::Glyph::arrow,
Bio::Graphics::Glyph::cds,
Bio::Graphics::Glyph::crossbox,
Bio::Graphics::Glyph::diamond,
Bio::Graphics::Glyph::dna,
Bio::Graphics::Glyph::dot,
Bio::Graphics::Glyph::ellipse,
Bio::Graphics::Glyph::extending_arrow,
Bio::Graphics::Glyph::generic,
Bio::Graphics::Glyph::graded_segments,
Bio::Graphics::Glyph::heterogeneous_segments,
Bio::Graphics::Glyph::line,
Bio::Graphics::Glyph::pinsertion,
Bio::Graphics::Glyph::primers,
Bio::Graphics::Glyph::rndrect,
Bio::Graphics::Glyph::segments,
Bio::Graphics::Glyph::ruler_arrow,
Bio::Graphics::Glyph::toomany,
Bio::Graphics::Glyph::transcript,
Bio::Graphics::Glyph::transcript2,
Bio::Graphics::Glyph::translation,
Bio::Graphics::Glyph::triangle,
Bio::DB::GFF,
Bio::SeqI,
Bio::SeqFeatureI,
Bio::Das,
\&\s-1GD\s0
.SH "AUTHOR"
.IX Header "AUTHOR"
Lincoln Stein <lstein@cshl.org>, Todd Harris <harris@cshl.org>
.PP
Copyright (c) 2001 Cold Spring Harbor Laboratory
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.  See \s-1DISCLAIMER\s0.txt for
disclaimers of warranty.
