.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "BP_PROCESS_GADFLY 1"
.TH BP_PROCESS_GADFLY 1 "2008-07-07" "perl v5.8.8" "User Contributed Perl Documentation"
.SH "NAME"
process_gadfly.pl \- Massage Gadfly/FlyBase GFF files into a version suitable for the Generic Genome Browser
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  % process_gadfly.pl ./RELEASE2 > gadfly.gff
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This script massages the \s-1RELEASE\s0 3 Flybase/Gadfly \s-1GFF\s0 files located at
http://www.fruitfly.org/sequence/release3download.shtml into the \*(L"correct\*(R"
version of the \s-1GFF\s0 format.
.PP
To use this script, download the whole genome \s-1FASTA\s0 file and save it
to disk.  (The downloaded file will be called something like
\&\*(L"na_whole\-genome_genomic_dmel_RELEASE3.FASTA\*(R", but the link on the
\&\s-1HTML\s0 page doesn't give the filename.)  Do the same for the whole
genome \s-1GFF\s0 annotation file (the saved file will be called something
like \*(L"whole\-genome_annotation\-feature\-region_dmel_RELEASE3.GFF\*(R".)  If
you wish you can download the \s-1ZIP\s0 compressed versions of these files.
.PP
Next run this script on the two files, indicating the name of the
downloaded \s-1FASTA\s0 file first, followed by the gff file:
.PP
.Vb 1
\& % process_gadfly.pl na_whole-genome_genomic_dmel_RELEASE3.FASTA whole-genome_annotation-feature-region_dmel_RELEASE3.GFF > fly.gff
.Ve
.PP
The gadfly.gff file and the fasta file can now be loaded into a Bio::DB::GFF database
using the following command:
.PP
.Vb 1
\&  % bulk_load_gff.pl -d fly -fasta na_whole-genome_genomic_dmel_RELEASE3.FASTA fly.gff
.Ve
.PP
(Where \*(L"fly\*(R" is the name of the database.  Change it as appropriate.
The database must already exist and be writable by you!)
.PP
The resulting database will have the following feature types
(represented as \*(L"method:source\*(R"):
.PP
.Vb 15
\&  Component:arm              A chromosome arm
\&  Component:scaffold         A chromosome scaffold (accession #)
\&  Component:gap              A gap in the assembly
\&  clone:clonelocator         A BAC clone
\&  gene:gadfly                A gene accession number
\&  transcript:gadfly          A transcript accession number
\&  translation:gadfly         A translation
\&  codon:gadfly               Significance unknown
\&  exon:gadfly                An exon
\&  symbol:gadfly              A classical gene symbol
\&  similarity:blastn          A BLASTN hit
\&  similarity:blastx          A BLASTX hit
\&  similarity:sim4            EST->genome using SIM4
\&  similarity:groupest        EST->genome using GROUPEST
\&  similarity:repeatmasker    A repeat
.Ve
.PP
\&\s-1IMPORTANT\s0 \s-1NOTE:\s0 This script will *only* work with the \s-1RELEASE3\s0 gadfly
files and will not work with earlier releases.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Bio::DB::GFF, bulk_load_gff.pl, load_gff.pl
.SH "AUTHOR"
.IX Header "AUTHOR"
Lincoln Stein, lstein@cshl.org
.PP
Copyright (c) 2002 Cold Spring Harbor Laboratory
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.  See \s-1DISCLAIMER\s0.txt for
disclaimers of warranty.
